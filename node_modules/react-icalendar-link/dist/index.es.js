import * as React from 'react';

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function pad(num) {
    if (num < 10) {
        return "0" + num;
    }
    return "" + num;
}
function formatDate(dateString) {
    var dateTime = new Date(dateString);
    return [
        dateTime.getUTCFullYear(),
        pad(dateTime.getUTCMonth() + 1),
        pad(dateTime.getUTCDate()),
        "T",
        pad(dateTime.getUTCHours()),
        pad(dateTime.getUTCMinutes()) + "00Z"
    ].join("");
}
function buildUrl(event, useDataURL, rawContent) {
    if (useDataURL === void 0) { useDataURL = false; }
    if (rawContent === void 0) { rawContent = ""; }
    var body = [];
    if (!event || !event.startTime || !event.title)
        throw Error("Both startTime and title fields are mandatory");
    body.push("DTSTART:" + formatDate(event.startTime));
    body.push("SUMMARY:" + event.title);
    event.url && body.push("URL:" + event.url);
    event.attendees &&
        event.attendees.forEach(function (attendee) {
            var regExp = /^([^<]+)\s*<(.+)>/;
            var matches = attendee.match(regExp);
            if (matches) {
                var name_1 = matches[1];
                var email = matches[2];
                body.push([
                    "ATTENDEE",
                    "CN=" + name_1,
                    "CUTYPE=INDIVIDUAL",
                    "PARTSTAT=NEEDS-ACTION",
                    "ROLE=REQ-PARTICIPANT",
                    "RSVP=TRUE:mailto:" + email
                ].join(";"));
            }
        });
    event.endTime && body.push("DTEND:" + formatDate(event.endTime));
    event.description && body.push("DESCRIPTION:" + event.description);
    event.location && body.push("LOCATION:" + event.location);
    rawContent && body.push(rawContent);
    var url = [
        "BEGIN:VCALENDAR",
        "VERSION:2.0",
        "BEGIN:VEVENT",
        body.join("\n"),
        "END:VEVENT",
        "END:VCALENDAR"
    ].join("\n");
    if (useDataURL) {
        return encodeURI("data:text/calendar;charset=utf8," + url);
    }
    else {
        return url;
    }
}
function downloadBlob(blob, filename) {
    var linkEl = document.createElement("a");
    linkEl.href = window.URL.createObjectURL(blob);
    linkEl.setAttribute("download", filename);
    document.body.appendChild(linkEl);
    linkEl.click();
    document.body.removeChild(linkEl);
}
function isIOSSafari() {
    var ua = window.navigator.userAgent;
    var iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);
    var webkit = !!ua.match(/WebKit/i);
    return iOS && webkit && !ua.match(/CriOS/i);
}
function isIOSChrome() {
    var ua = window.navigator.userAgent;
    var iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);
    return iOS && !!ua.match(/CriOS/i);
}

/**
 * @class ICalLink
 */
var ICalLink = /** @class */ (function (_super) {
    __extends(ICalLink, _super);
    function ICalLink(props) {
        var _this = _super.call(this, props) || this;
        _this.handleClick = function (e) {
            e.preventDefault();
            e.stopPropagation();
            var _a = _this.props, event = _a.event, filename = _a.filename, rawContent = _a.rawContent;
            var url = buildUrl(event, isIOSSafari(), rawContent);
            var blob = new Blob([url], {
                type: "text/calendar;charset=utf-8"
            });
            // IE
            if (_this.isCrappyIE) {
                window.navigator.msSaveOrOpenBlob(blob, filename);
                return;
            }
            // Safari
            if (isIOSSafari()) {
                window.open(url, "_blank");
                return;
            }
            // Desktop
            downloadBlob(blob, filename);
        };
        _this.isCrappyIE = !!(typeof window !== "undefined" &&
            window.navigator.msSaveOrOpenBlob &&
            window.Blob);
        return _this;
    }
    ICalLink.prototype.render = function () {
        var _a = this.props, children = _a.children, href = _a.href, className = _a.className;
        return (React.createElement("a", __assign({ onClick: this.handleClick }, { href: href, className: className }), children));
    };
    // FIXME - iOS Chrome doesn't support adding to iCal at the moment.
    // https://bugs.chromium.org/p/chromium/issues/detail?id=666211
    ICalLink.isSupported = function () { return !isIOSChrome(); };
    ICalLink.defaultProps = {
        filename: "download.ics",
        href: "#add-to-calendar",
        rawContent: ""
    };
    return ICalLink;
}(React.Component));

export { ICalLink as default };
//# sourceMappingURL=index.es.js.map
